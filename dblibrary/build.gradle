import lib.dependencies.Versions

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion Versions.compileSdkVersion

    defaultConfig {
        minSdkVersion Versions.minSdkVersion
        targetSdkVersion Versions.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${Versions.kotlin_version}"
    implementation "androidx.core:core-ktx:${Versions.core_ktx_version}"
    testImplementation "junit:junit:${Versions.junit_version}"
    androidTestImplementation "androidx.test.ext:junit:${Versions.and_junit_version}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${Versions.espresso_version}"

    def room_version = "2.2.5"

    api "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    api "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
//    implementation "androidx.room:room-rxjava2:$room_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
}