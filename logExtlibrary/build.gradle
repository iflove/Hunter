apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
import lib.dependencies.Versions

//group = 'com.github.iflove'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.3.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        freeCompilerArgs = ['-Xjvm-default=compatibility']
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dependencies {
//    implementation fileTree(dir: "libs", include: ["*.jar"])
//    implementation "org.jetbrains.kotlin:kotlin-stdlib:${Versions.kotlin_version}"
//    implementation "androidx.core:core-ktx:${Versions.core_ktx_version}"
    testImplementation "junit:junit:${Versions.junit_version}"
    androidTestImplementation "androidx.test.ext:junit:${Versions.and_junit_version}"
//    androidTestImplementation "androidx.test.espresso:espresso-core:${Versions.espresso_version}"
    compileOnly "androidx.appcompat:appcompat:${Versions.appcompat_version}"
}
def groupIdStr = 'com.github.iflove.Hunter'
def artifactIdStr = 'logExtlibrary'
apply plugin: 'maven-publish'
task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = "$groupIdStr"
                artifactId = "$artifactIdStr"
                version = project.android.defaultConfig.versionName
                artifact generateSourcesJar
            }
        }
    }
}